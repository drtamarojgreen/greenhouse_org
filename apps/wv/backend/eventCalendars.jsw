// apps/wv/backend/eventCalendars.jsw

/**
 * This file contains backend functions for managing event calendar data.
 * These functions can be called from your site's page code.
 * For more information, visit: https://support.wix.com/en/article/corvid-web-modules-calling-backend-code-from-the-frontend
 */

export async function getEvents(filter = {}) {
  // In a real application, you would fetch this data from a database (e.g., Wix Data Collections)
  // and apply filters based on the 'filter' object (e.g., date range, category).
  const events = [
    {
      id: "1",
      title: "Mindfulness Meditation Workshop",
      date: "2023-11-10T14:00:00Z",
      location: "Online (Zoom)",
      description: "Join our expert-led workshop to learn practical mindfulness techniques for stress reduction.",
      category: "Workshop",
      tags: ["mindfulness", "meditation", "stress"]
    },
    {
      id: "2",
      title: "Understanding Anxiety: A Community Talk",
      date: "2023-11-15T18:30:00Z",
      location: "Community Center Hall",
      description: "A free community talk on understanding and managing anxiety, open to all.",
      category: "Community Event",
      tags: ["anxiety", "community", "education"]
    },
    {
      id: "3",
      title: "Support Group for Caregivers",
      date: "2023-11-22T10:00:00Z",
      location: "Online (Google Meet)",
      description: "A weekly support group providing a safe space for caregivers of individuals with mental health challenges.",
      category: "Support Group",
      tags: ["caregivers", "support", "group"]
    }
  ];

  // Simulate filtering (very basic)
  let filteredEvents = events;
  if (filter.category) {
    filteredEvents = filteredEvents.filter(event => event.category === filter.category);
  }
  // Add more complex filtering logic here (e.g., by date, keyword)

  return filteredEvents;
}

export async function getEventById(eventId) {
  const events = await getEvents(); // Get all events first, then find
  return events.find(event => event.id === eventId);
}

export async function registerForEvent(eventId, registrationDetails) {
  // In a real application, this would involve saving registration details to a database
  // and potentially integrating with an external event management system.
  console.log(`Registration for event ${eventId}:`, registrationDetails);
  // Simulate successful registration
  return { success: true, message: `Successfully registered for event ${eventId}.` };
}
